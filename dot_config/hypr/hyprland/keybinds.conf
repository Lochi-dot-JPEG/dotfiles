# ################### It just worksâ„¢ keybinds ###################

# My own definitions
$menu = sh ~/.config/rofi/launchers/type-3/launcher.sh
$powermenu = sh ~/.config/rofi/powermenu/type-2/powermenu.sh
#rofi -show drun
$nvim = [workspace 2 silent; float; move 0 0] kitty nvim
$mod = Super

# Volume
bindl = $mod ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_SOURCE@ toggle
bindl = Alt ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_SOURCE@ toggle
bindl = ,XF86AudioMute, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 0%
#bindl = $mod+Shift,M, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 0%
bindle=, XF86AudioRaiseVolume, exec, wpctl set-volume -l 1 @DEFAULT_AUDIO_SINK@ 5%+
bindle=, XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-

# Brightness
# Uncomment these if you can't get AGS to work
#bindle=, XF86MonBrightnessUp, exec, brightnessctl set '12.75+'
#bindle=, XF86MonBrightnessDown, exec, brightnessctl set '12.75-'

# ################################### Applications ###################################
# Apps: just normal apps
bind = $mod, R, exec, $nvim
bind = $mod, C, exec, code --password-store=gnome --enable-features=UseOzonePlatform --ozone-platform=wayland
# bind = $mod, T, exec, foot
# bind = $mod, Return, exec, foot --override shell=fish
bind = $mod, E, exec, kitty
bind = $mod+Alt, E, exec, thunar
bind = $mod, W, exec, zen-browser
bind = $mod+Alt, W, exec, chromium --ozone-platform-hint=wayland --gtk-version=4 --ignore-gpu-blocklist --enable-features=TouchpadOverscrollHistoryNavigation --enable-wayland-ime
#bind = $mod, X, exec, $menu
#bind = $mod, Return, exec, $menu
bind = $mod, Return, exec, $menu

# Apps: Settings and config
bind = $mod, I, exec, XDG_CURRENT_DESKTOP="gnome" gnome-control-center
bind = Control+$mod, V, exec, pavucontrol
bind = Control+$mod+Shift, V, exec, easyeffects
bind = Control+Shift, Escape, exec, gnome-system-monitor

# Actions
bind = $mod, Period, exec, pkill fuzzel || ~/.local/bin/fuzzel-emoji
bind = $mod, Q, killactive,
bind = $mod+Alt, Space, togglefloating,
bind = $mod+Alt, Q, exec, $powermenu
bind = Shift+$mod+Alt, Q, exec, hyprctl kill
bind = Control+Shift+Alt, Delete, exec, pkill wlogout || wlogout -p layer-shell
bind = Control+Shift+Alt+$mod, Delete, exec, systemctl poweroff || loginctl poweroff

# Screenshot, Record, OCR, Color picker, Clipboard history
bind = $mod, Tab, exec, grim -g "$(slurp)" - | swappy -f -
bind = $mod+Shift, C, exec, hyprpicker -a
bind = $mod, V, exec, pkill fuzzel || cliphist list | fuzzel --no-fuzzy --dmenu | cliphist decode | wl-copy

# Wallpaper
bind = $mod+Alt, W, exec, sh ~/.config/hypr/hyprland/random_paper.sh 0

# Text-to-image
# Normal
bind = Control+$mod+Shift,S,exec,grim -g "$(slurp $SLURP_ARGS)" "tmp.png" && tesseract "tmp.png" - | wl-copy && rm "tmp.png"

# Media
#bindl= $mod+Shift, N, exec, playerctl next || playerctl position `bc <<< "100 * $(playerctl metadata mpris:length) / 1000000 / 100"`
#bind = $mod+Shift+Alt, mouse:275, exec, playerctl previous
#bind = $mod+Shift+Alt, mouse:276, exec, playerctl next || playerctl position `bc <<< "100 * $(playerctl metadata mpris:length) / 1000000 / 100"`
#bindl= $mod+Shift, B, exec, playerctl previous
#bindl= $mod+Shift, P, exec, playerctl play-pause
#
bindl= ,XF86AudioNext, exec, playerctl next || playerctl position `bc <<< "100 * $(playerctl metadata mpris:length) / 1000000 / 100"`
bindl= ,XF86AudioPlay, exec, playerctl play-pause
bindl= ,XF86AudioPrev, exec, playerctl previous
#bindl= ,XF86AudioPlay, exec, playerctl play-pause


# ##################################### AGS keybinds #####################################
bindr = Control+$mod, R, exec, killall ags ydotool; ags &
bindr = Control+$mod+Alt, R, exec, hyprctl reload; killall ags ydotool; ags &
bind = Control+$mod, T, exec, ~/.config/ags/scripts/color_generation/switchwall.sh
bind = Control+Alt, Slash, exec, ags run-js 'cycleMode();'
#bindir = $mod, $mod_L, exec, ags -t 'overview'
#bind = $mod, Tab, exec, ags -t 'overview'
bind = $mod, Slash, exec, for ((i=0; i<$(hyprctl monitors -j | jq length); i++)); do ags -t "cheatsheet""$i"; done
#bind = $mod, B, exec, ags -t 'sideleft'
#bind = $mod, A, exec, ags -t 'sideleft'
#bind = $mod, O, exec, ags -t 'sideleft'
#bind = $mod, N, exec, ags -t 'sideright'
#bind = $mod, M, exec, ags run-js 'openMusicControls.value = (!mpris.getPlayer() ? false : !openMusicControls.value);'
bind = $mod, Comma, exec, ags run-js 'openColorScheme.value = true; Utils.timeout(2000, () => openColorScheme.value = false);'
bind = $mod, K, exec, for ((i=0; i<$(hyprctl monitors -j | jq length); i++)); do ags -t "osk""$i"; done
bind = Control+Alt, Delete, exec, for ((i=0; i<$(hyprctl monitors -j | jq length); i++)); do ags -t "session""$i"; done
bind = Control+$mod, G, exec, for ((i=0; i<$(hyprctl monitors -j | jq length); i++)); do ags -t "crosshair""$i"; done
bindle = , XF86AudioRaiseVolume, exec, ags run-js 'indicator.popup(1);'
bindle = , XF86AudioLowerVolume, exec, ags run-js 'indicator.popup(1);'
bindle=, XF86MonBrightnessUp, exec, ags run-js 'brightness.screen_value += 0.05; indicator.popup(1);'
bindle=, XF86MonBrightnessDown, exec, ags run-js 'brightness.screen_value -= 0.05; indicator.popup(1);'
#bindl  = , XF86AudioMute, exec, ags run-js 'indicator.popup(1);'
bindl  = $mod+Shift,M,   exec, ags run-js 'indicator.popup(1);'

# ##################################### Plugins #########################################

# Testing
# bind = $modAlt, f12, exec, notify-send "Hyprland version: $(hyprctl version | head -2 | tail -1 | cut -f2 -d ' ')" "owo" -a 'Hyprland keybind'
# bind = $mod+Alt, f12, exec, notify-send "Millis since epoch" "$(date +%s%N | cut -b1-13)" -a 'Hyprland keybind'
bind = $mod+Alt, f12, exec, notify-send 'Test notification' "Here's a really long message to test truncation and wrapping\nYou can middle click or flick this notification to dismiss it!" -a 'Shell' -A "Test1=I got it!" -A "Test2=Another action" -t 5000
bind = $mod+Alt, Equal, exec, notify-send "Urgent notification" "Ah hell no" -u critical -a 'Hyprland keybind'

# ########################### Keybinds for Hyprland ############################
# Swap windows
bind = $mod+Alt, H, movewindow, l
bind = $mod+Alt, L, movewindow, r
bind = $mod+Alt, K, movewindow, u
bind = $mod+Alt, J, movewindow, d
bind = $mod, P, pin
# Move focus
bind = $mod, h, movefocus, l
bind = $mod, l, movefocus, r
bind = $mod, k, movefocus, u
bind = $mod, j, movefocus, d
bind = $mod, BracketLeft, movefocus, l
bind = $mod, BracketRight, movefocus, r

# Workspace, window, tab switch with keyboard
bind = Control+$mod, right, workspace, +1
bind = Control+$mod, left, workspace, -1
bind = $mod, mouse:275, workspace, -1
bind = $mod, mouse:276, workspace, +1
bind = Control+$mod, BracketLeft, workspace, -1
bind = Control+$mod, BracketRight, workspace, +1
bind = Control+$mod, up, workspace, -5
bind = Control+$mod, down, workspace, +5
#bind = $mod, A, workspace, +1
#bind = $mod, S, workspace, -1
#bind = $mod+Shift, A, movetoworkspace, +1
#bind = $mod+Shift, S, movetoworkspace, -1

# Window split ratio
#binde = $mod, Minus, splitratio, -0.1
#binde = $mod, Equal, splitratio, 0.1
#binde = $mod, Semicolon, splitratio, -0.1
#binde = $mod, Apostrophe, splitratio, 0.1

# Fullscreen
bind = $mod, Semicolon, fullscreen, 0
bind = $mod+Alt, Semicolon, fullscreen, 1
#bind = $mod_Alt, F, fakefullscreen, 0

# Switching
bind = $mod, A, workspace, 1
bind = $mod, S, workspace, 2
bind = $mod, D, workspace, 3
bind = $mod, F, workspace, 4
bind = $mod, G, workspace, 5
bind = $mod+Shift, A, workspace, 6
bind = $mod+Shift, S, workspace, 7
bind = $mod+Shift, D, workspace, 8
bind = $mod+Shift, F, workspace, 9
bind = $mod+Shift, G, workspace, 10

bind = $mod+Alt, A, movetoworkspace, 1
bind = $mod+Alt, S, movetoworkspace, 2
bind = $mod+Alt, D, movetoworkspace, 3
bind = $mod+Alt, F, movetoworkspace, 4
bind = $mod+Alt, G, movetoworkspace, 5
bind = $mod+Shift+Alt, A, movetoworkspace, 6
bind = $mod+Shift+Alt, S, movetoworkspace, 7
bind = $mod+Shift+Alt, D, movetoworkspace, 8
bind = $mod+Shift+Alt, F, movetoworkspace, 9
bind = $mod+Shift+Alt, G, movetoworkspace, 10

#bind = $mod+Shift, D, togglespecialworkspace,
bind = Control+$mod, S, togglespecialworkspace,
#bind = Alt, Tab, cyclenext
bind = Alt, Tab, bringactivetotop,   # bring it to the top

# Move window to workspace $mod + Alt + [0-9]
#bind = $mod+Alt, 1, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh movetoworkspacesilent 1
#bind = $mod+Alt, 2, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh movetoworkspacesilent 2
#bind = $mod+Alt, 3, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh movetoworkspacesilent 3
#bind = $mod+Alt, 4, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh movetoworkspacesilent 4
#bind = $mod+Alt, 5, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh movetoworkspacesilent 5
#bind = $mod+Alt, 6, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh movetoworkspacesilent 6
#bind = $mod+Alt, 7, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh movetoworkspacesilent 7
#bind = $mod+Alt, 8, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh movetoworkspacesilent 8
#bind = $mod+Alt, 9, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh movetoworkspacesilent 9
#bind = $mod+Alt, 0, exec, ~/.config/ags/scripts/hyprland/workspace_action.sh movetoworkspacesilent 10
bind = Control+Shift+$mod, Up, movetoworkspacesilent, special
#bind = $mod+Alt, S, movetoworkspacesilent, special

# Scroll through existing workspaces with (Control) + $mod + scroll
bind = $mod, mouse_up, workspace, +1
bind = $mod, mouse_down, workspace, -1
bind = Control+$mod, mouse_up, workspace, +1
bind = Control+$mod, mouse_down, workspace, -1

# Move/resize windows with $mod + LMB/RMB and dragging
bindm = Alt, mouse:272, movewindow
bindm = Alt, mouse:273, resizewindow
